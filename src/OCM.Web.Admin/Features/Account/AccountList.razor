@page "/accounts"
@using OCM.Application.Requests.Queries
@using OCM.Application.Response.Account
@using MediatR
@using MudBlazor

<MudPaper Class="mx-auto mt-4" Elevation="2">
    <div class="pa-4">
        <MudText Typo="Typo.h6">Accounts</MudText>
        <MudText Typo="Typo.subtitle2" Color="Color.Secondary">List of all created accounts</MudText>
    </div>
    <MudTable T="AccountResponseViewModel" ServerData="ServerReload" Dense="true" Hover="true" Bordered="false" Class="mt-4">
        <HeaderContent>
            <MudTh>#</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Page Access</MudTh>
            <MudTh>Status</MudTh>
            <MudTh align="right">Action</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="#">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Email</MudTd>
            <MudTd DataLabel="Page Access">@context.PageAccess</MudTd>
            <MudTd DataLabel="Status">
                <MudChip T="string" Color="Color.Success" Variant="Variant.Filled" Class="mr-2">Premium Account
                </MudChip>
                <MudChip T="string" Color="Color.Warning" Variant="Variant.Outlined">Coins: @context.Coins</MudChip>
            </MudTd>
            <MudTd align="right">
                <MudIconButton Href="@($"/accounts/{context.Id}")" Icon="@Icons.Material.Filled.Visibility"
                               Color="Color.Primary"/>
            </MudTd>
        </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
    </MudTable>
</MudPaper>

@code {

    [Inject] private IMediator Mediator { get; set; }

    private async Task<TableData<AccountResponseViewModel>> ServerReload(TableState state, CancellationToken token)
    {
        var request = new GetAccountsRequest { Page = state.Page + 1, Limit = state.PageSize };
        var response = await Mediator.Send(request, token);
        return new TableData<AccountResponseViewModel> { TotalItems = response.TotalRecords, Items = response.Data };
    }

}
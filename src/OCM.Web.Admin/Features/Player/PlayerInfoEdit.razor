<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Edit Info</MudText>

        <MudGrid>
            <MudItem xs="12" sm="6">
                <MudTextField Label="Name" @bind-Value="Character.Name" Variant="Variant.Outlined"/>
            </MudItem>

            <MudItem xs="6" sm="3">
                <MudTextField Label="Health" @bind-Value="Character.Health" Variant="Variant.Outlined"/>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudTextField Label="Max Health" @bind-Value="Character.MaxHealth" Variant="Variant.Outlined"/>
            </MudItem>

            <MudItem xs="6" sm="3">
                <MudTextField Label="Level" @bind-Value="Character.Level" Variant="Variant.Outlined"/>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudTextField Label="Experience" @bind-Value="Character.Experience" Variant="Variant.Outlined"/>
            </MudItem>

            <MudItem xs="6" sm="3">
                <MudTextField Label="Mana" @bind-Value="Character.Mana" Variant="Variant.Outlined"/>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudTextField Label="Max Mana" @bind-Value="Character.MaxMana" Variant="Variant.Outlined"/>
            </MudItem>

            <MudItem xs="6" sm="3">
                <MudTextField Label="Soul Points" @bind-Value="Character.SoulPoints" Variant="Variant.Outlined"/>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudTextField Label="Cap" @bind-Value="Character.Capacity" Variant="Variant.Outlined"/>
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudTextField Label="Balance" @bind-Value="Character.Balance" Variant="Variant.Outlined"/>
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudSelect T="string" Label="Vocation" @bind-Value="Character.Vocation" Variant="Variant.Outlined">
                    @foreach (var vocation in VocationOptions)
                    {
                        <MudSelectItem Value="@vocation">@vocation</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudSelect T="string" Label="Sex" @bind-Value="Character.Sex" Variant="Variant.Outlined">
                    <MudSelectItem T="string" Value="@("Male")">Male</MudSelectItem>
                    <MudSelectItem Value="@("Female")">Female</MudSelectItem>
                </MudSelect>
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudSelect T="string" Label="World" @bind-Value="Character.World" Variant="Variant.Outlined">
                    @foreach (var world in WorldOptions)
                    {
                        <MudSelectItem Value="@world">@world</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudSelect T="string" Label="Town" @bind-Value="Character.Town" Variant="Variant.Outlined">
                    @foreach (var town in TownOptions)
                    {
                        <MudSelectItem Value="@town">@town</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
        </MudGrid>
    </DialogContent>

    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Submit">Update</MudButton>
        <MudButton Color="Color.Default" OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }

    [Parameter] public CharacterInfoEditViewModel Character { get; set; } = new();

    readonly List<string> VocationOptions = new() { "Paladin", "Knight", "Mage", "Druid" };
    readonly List<string> WorldOptions = new() { "LocalHost", "World1", "World2" };
    readonly List<string> TownOptions = new() { "Dawnport", "Thais", "Carlin" };

    void Submit()
    {
        MudDialog.Close(DialogResult.Ok(Character));
    }

    void Cancel()
    {
        MudDialog.Cancel();
    }

    public class CharacterInfoEditViewModel
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public int Health { get; set; }
        public int MaxHealth { get; set; }
        public int Level { get; set; }
        public int Experience { get; set; }
        public int Mana { get; set; }
        public int MaxMana { get; set; }
        public int SoulPoints { get; set; }
        public int Capacity { get; set; }
        public int Balance { get; set; }
        public string Vocation { get; set; }
        public string Sex { get; set; }
        public string World { get; set; }
        public string Town { get; set; }
    }


}


